name: publish Docker image

on:
  schedule:
    - cron: '0 0 * * MON'
  push:
    branches:
      - main
    paths:
      - ".github/workflows/docker-publish.yml"
      - "Dockerfile"
      - "DESCRIPTION"
      - "install_packages_*.R"
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/docker-publish.yml"
      - "Dockerfile"
      - "DESCRIPTION"
    types:
      - closed
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  #REGISTRY: docker.io
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  # R packages are cached for speed. I invalidate cache weekly in the Dockerfile
  R_SYSTEM_LIBRARY_PATH: /usr/local/lib/R/site-library

jobs:
  # official-shiny:
  #   runs-on: ubuntu-24.04-arm
  #   
  #   permissions:
  #     contents: read
  #     packages: write
  #   
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         repository: https://github.com/rstudio/shiny-server.git
  #         ref: master
  #     
  #     # Set up BuildKit Docker container builder to be able to build
  #     # multi-platform images and export cache
  #     # https://github.com/docker/setup-buildx-action
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  # 
  #     # Login against a Docker registry except on PR
  #     # https://github.com/docker/login-action
  #     - name: Log into registry ghcr.io
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         token: ${{ github.token }}
  # 
  #     # Build and push Docker image with Buildx (don't push on PR)
  #     # https://github.com/docker/build-push-action
  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: ./docker/ubuntu16.04/
  #         file: Dockerfile
  #         push: true
  #         tags: Uni-of-Exeter/Planting-Tools:shiny-server-arm64-latest
  #         labels: ${{ steps.meta.outputs.labels }}
    
  backend:
    # needs: official-shiny
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      packages: write
      
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     platform:
    #       # - linux/amd64
    #       - linux/arm64 # rocker/shiny-verse images only available on amd64

    steps:

      - name: Convert IMAGE_NAME to lowercase
        run: echo "IMAGE_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set dgpsi folder name
        run: echo "DGPSI_FOLDER_NAME=$(curl -sSL https://raw.githubusercontent.com/mingdeyu/dgpsi-R/refs/heads/master/R/initi_py.R | grep "env_name *<-" | grep --invert-match "^\s*#" | grep --only-matching --perl-regexp 'dgp.*\d')" >> $GITHUB_ENV
      
      ## https://github.com/docker/setup-qemu-action
      #- name: Set up QEMU
      #  uses: docker/setup-qemu-action@v3

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          #platforms: linux/arm64
          build-args: DGPSI_FOLDER_NAME=${{ env.DGPSI_FOLDER_NAME }}
          pull: true
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
